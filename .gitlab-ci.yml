# Copyright (c) 2021 VMware, Inc. All rights reserved.

---
stages:
  - lint
  - pre-commit
  - build_svt
  - test_svt

variables:
  PLUGIN_PACKAGES: "*.sh"
  CICD_UPSTREAM_PATH: "saltstack/open/salt-vm-tools"
  CICD_SALT_SCRIPT_VERSION: "0.2"
  CICD_SALT_SCRIPT_COMP_VERSION: "0.2.0"
  CICD_SALT_SCRIPT_RELEASE: "1"
  CICD_SALT_SCRIPT_DATE: "Thu Jan 1 1970"
  CICD_SALT_SCRIPT_BRANCH: "main"

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID == null

include:
  - project: saltstack/pop/cicd/ci-templates
    file: /lint/pre-commit-run-all.yml

build-salt-vmtools-linux:
  stage: build_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - metadata.json
      - svtminion.sh
    expire_in: 120 days
#    reports:
#      dotenv: build.env
  image: centos:7
         ## almalinux:8
  script:
    # assumes running as root
    - oldpwd=$(pwd)
    - mkdir /root/ || true
    - echo "machine gitlab.com login gitlab-ci-token password ${CI_JOB_TOKEN}" >> ~/.netrc
    # setup environment vars
    - export CICD_SALT_SCRIPT_DATE=$(date +"%a %b %0d %Y")
    - export CICD_SALT_SCRIPT_VERSION_DATE=$(date "+%Y-%m-%d-%H:%M")
    # generate sha256 for metadata.json file
    - cd linux
    - cp linux_metadata.json metadata.json
    - sed -i -e 's&SALT_SCRIPT_VERSION&'${CICD_SALT_SCRIPT_VERSION}'&' metadata.json
    - sed -i -e 's&SALT_SCRIPT_COMP_VERSION&'${CICD_SALT_SCRIPT_COMP_VERSION}'&' metadata.json
    - svtminion_sha256=$(sha256sum svtminion.sh | cut -d ' ' -f 1)
    - sed -i -e 's&SVTMINION_SHA256&'${svtminion_sha256}'&' metadata.json
    - cat metadata.json
    - sed -i -e 's&SCRIPT_VERSION_REPLACE&'${CICD_SALT_SCRIPT_VERSION_DATE}-${CI_COMMIT_SHORT_SHA}'&' svtminion.sh
    - cp -f metadata.json ${oldpwd}/metadata.json
    - cp -f svtminion.sh ${oldpwd}/svtminion.sh

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success


build-salt-vmtools-windows:
  stage: build_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - svtminion.ps1
      - salt-call.bat
      - salt-minion.bat
    expire_in: 120 days
  image: centos:7
  script:
    - oldpwd=$(pwd)
    - cd windows
    - export CICD_SALT_SCRIPT_VERSION_DATE=$(date "+%Y-%m-%d-%H:%M")
    - sed -i -e 's&SCRIPT_VERSION_REPLACE&'${CICD_SALT_SCRIPT_VERSION_DATE}-${CI_COMMIT_SHORT_SHA}'&' svtminion.ps1
    - cp -f svtminion.ps1 ${oldpwd}/svtminion.ps1

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success


build-tags-salt-vmtools-linux:
  stage: build_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - metadata.json
      - svtminion.sh
    expire_in: 120 days
#    reports:
#      dotenv: build.env
  image: centos:7
         ## almalinux:8
  script:
    # assumes running as root
    - oldpwd=$(pwd)
    - mkdir /root/ || true
    - echo "machine gitlab.com login gitlab-ci-token password ${CI_JOB_TOKEN}" >> ~/.netrc
    # setup environment vars
    - export CICD_SALT_SCRIPT_DATE=$(date +"%a %b %0d %Y")
    # generate sha256 for metadata.json file
    - cd linux
    - cp linux_metadata.json metadata.json
    # expect tag of version form x.y-z where -z is release number
    - export CICD_SALT_SCRIPT_VERSION=$(echo "${CI_COMMIT_TAG}" | sed s/v// | cut -d '-' -f 1)
    - export CICD_SALT_SCRIPT_RELEASE=$(echo "${CI_COMMIT_TAG}" | sed s/v// | cut -d '-' -f 2)
    ## ensure if no release number given default to 1
    - if [[ "${CICD_SALT_SCRIPT_VERSION}" = "${CICD_SALT_SCRIPT_RELEASE}" ]]; then export CICD_SALT_SCRIPT_RELEASE=1; fi
    - sed -i -e 's&SALT_SCRIPT_VERSION&'${CICD_SALT_SCRIPT_VERSION}'&' metadata.json
    - sed -i -e 's&SALT_SCRIPT_COMP_VERSION&'${CICD_SALT_SCRIPT_VERSION}.${CICD_SALT_SCRIPT_RELEASE}'&' metadata.json
    - svtminion_sha256=$(sha256sum svtminion.sh | cut -d ' ' -f 1)
    - sed -i -e 's&SVTMINION_SHA256&'${svtminion_sha256}'&' metadata.json
    - cat metadata.json
    - sed -i -e 's&SCRIPT_VERSION_REPLACE&'${CI_COMMIT_TAG}'&' svtminion.sh
    - cp -f metadata.json ${oldpwd}/metadata.json
    - cp -f svtminion.sh ${oldpwd}/svtminion.sh

  rules:
    - if: "$CI_COMMIT_TAG != null && $CI_PROJECT_PATH == $CICD_UPSTREAM_PATH"
      when: always
    - when: never


build-tags-salt-vmtools-windows:
  stage: build_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - svtminion.ps1
      - salt-call.bat
      - salt-minion.bat
    expire_in: 120 days
  image: centos:7
  script:
    - oldpwd=$(pwd)
    - cd windows
    - sed -i -e 's&SCRIPT_VERSION_REPLACE&'${CI_COMMIT_TAG}'&' svtminion.ps1
    - cp -f svtminion.ps1 ${oldpwd}/svtminion.ps1

  rules:
    - if: "$CI_COMMIT_TAG != null && $CI_PROJECT_PATH == $CICD_UPSTREAM_PATH"
      when: always
    - when: never


test-salt-vmtools-linux:
  stage: test_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 120 days
  needs:
    - job: build-salt-vmtools-linux
  ## image: centos:7
  tags:
    - centos7
  script:
    - oldpwd=$(pwd)
    - mkdir /root/ || true
    - echo "machine gitlab.com login gitlab-ci-token password ${CI_JOB_TOKEN}" >> ~/.netrc
    - id
    - ls -alh svtminion.sh
    - date
    - yum makecache
    - ./svtminion.sh --depend || { _retn=$?; if [[ ${_retn} -eq 126 ]]; then echo "test correct"; else echo "test failed, should be missing at least the vmtoolsd dependency, returned '${_retn}'"; exit 1; fi; }
    - ls -alh /var/log/vmware-svtminion.sh-depend-*
    - ./svtminion.sh --depend && { _retn=$?; echo "test failed - expecting 126 exit code, should be missing at least the vmtoolsd dependency"; exit 1; }
    - yum -y install open-vm-tools
    - yum -y install curl
    - ./svtminion.sh --depend --loglevel info || { _retn=$?; echo "test failed, there should be no missing dependencies, returned '${_retn}'"; }
    - ls -l /var/log/vmware-svtminion.sh-depend-* | wc -l
    - if [[ 2 -eq $(ls -l /var/log/vmware-svtminion.sh-depend-* | wc -l) ]]; then echo "test correct"; else "test failed, should be 2 depend log files"; exit 1; fi
    - ./svtminion.sh --status --loglevel info || { _retn=$?; if [[ ${_retn} -eq 102 ]]; then echo "test correct"; else echo "test failed, salt-minion should not be installed, returned '${_retn}'"; exit 1; fi; }
    - ls -alh /var/log/vmware-svtminion.sh-status-*
    - ./svtminion.sh --status && { echo "test failed- expecting 102 exit code, salt-minion should not be installed"; exit 1; }
    - ./svtminion.sh --install master=192.168.0.5 --loglevel debug
    - cat /etc/salt/minion
    - cat /etc/salt/minion | grep 'master:\ 192.168.0.5' 1>/dev/null
    - myhost=$(hostname)
    - myfqdn=$(/usr/bin/salt-call --local grains.get fqdn | sed "s/'//g")
    - if [[ "${myhost}" = "${myfqdn}" ]]; then "echo test correct" else echo "test failed, FQDN '${myfqdn}' should have match hostname '${myhost}'"; exit 1; fi
    - ls -alh /opt/saltstack/salt/run/
    - ls -alh /usr/bin/salt-call
    - ls -alh /usr/bin/salt-minion
    - sudo -u root /usr/bin/salt-call --local test.versions
    - sudo -u root /usr/bin/salt-call --local grains.items
    - sudo -u root /usr/bin/salt-call --local cmd.run "ls -al /"
    - ./svtminion.sh --status || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status && { echo "test failed- expecting 100 exit code, salt-minion should be installed"; exit 1; }
    - ./svtminion.sh --clear myminion
    - cat /etc/salt/minion | grep 'id:\ myminion' 1>/dev/null
    - ./svtminion.sh --clear
    - cat /etc/salt/minion | grep '# id:\ myminion' 1>/dev/null
    - cat /etc/salt/minion | grep 'id:\ myminion_' 1>/dev/null
    - ./svtminion.sh --remove || { _retn=$?; echo "test failed, did not uninstall the salt-minion, returned '${_retn}'"; }
    - list_dirs_to_chk_removed="/opt/saltstack /etc/salt /var/run/salt /var/cache/salt /var/log/salt"
    - for idx in ${list_dirs_to_chk_removed}; do if [[ -d "${idx}" ]]; then echo "directory ${idx} is left after a remove"; exit 1; fi; done
    - list_files_to_chk_removed="/usr/bin/salt-call /usr/bin/salt-minion /usr/lib/systemd/system/salt-minion.service /etc/systemd/system/salt-minion.service"
    - for idx in ${list_files_to_chk_removed}; do if [[ -f "${idx}" ]]; then echo "file ${idx} is left after a remove"; exit 1; fi; done
    - ./svtminion.sh --status || { _retn=$?; if [[ ${_retn} -eq 102 ]]; then echo "test correct"; else echo "test failed, salt-minion should not be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status && { echo "test failed- expecting 102 exit code, salt-minion should not be installed"; exit 1; }
    - ./svtminion.sh --version --loglevel debug
    - ls -alh /var/log/vmware-svtminion.sh-default-*
    - ./svtminion.sh --minionversion "3004rc1-1" --install master=192.168.0.6 --loglevel debug
    - cat /etc/salt/minion | grep 'master:\ 192.168.0.6' 1>/dev/null
    - myhost=$(hostname)
    - myfqdn=$(/usr/bin/salt-call --local grains.get fqdn | sed "s/'//g")
    - if [[ "${myhost}" = "${myfqdn}" ]]; then "echo test correct" else echo "test failed, FQDN '${myfqdn}' should have match hostname '${myhost}'"; exit 1; fi
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - if [[ 10 -eq $(ls -l /var/log/vmware-svtminion.sh-status-* | wc -l) ]]; then echo "test correct"; else "test failed, should be only 10 status log files"; exit 1; fi

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success


test-salt-vmtools-windows:
  stage: test_svt
  tags:
    - shared-windows
    - windows
    - windows-1809
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 120 days
  needs:
    - job: build-salt-vmtools-windows
  script:
    # Running functional tests (must be run with powershell -file)
    - powershell -file .\tests\windows\runtests.ps1
    # Running integration tests (must be run with powershell -file)
    - powershell -file .\tests\windows\runtests.ps1 -Integration

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success


test-tags-salt-vmtools-linux:
  stage: test_svt
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    expire_in: 120 days
  needs:
    - job: build-tags-salt-vmtools-linux
  tags:
    - centos7
  script:
    - oldpwd=$(pwd)
    - mkdir /root/ || true
    - echo "machine gitlab.com login gitlab-ci-token password ${CI_JOB_TOKEN}" >> ~/.netrc
    - id
    - ls -alh svtminion.sh
    - date
    - yum makecache
    - ./svtminion.sh --depend || { _retn=$?; if [[ ${_retn} -eq 126 ]]; then echo "test correct"; else echo "test failed, should be missing at least the vmtoolsd dependency, returned '${_retn}'"; exit 1; fi; }
    - ls -alh /var/log/vmware-svtminion.sh-depend-*
    - ./svtminion.sh --depend && { _retn=$?; echo "test failed - expecting 126 exit code, should be missing at least the vmtoolsd dependency"; exit 1; }
    - yum -y install open-vm-tools
    - yum -y install curl
    - ./svtminion.sh --depend --loglevel info || { _retn=$?; echo "test failed, there should be no missing dependencies, returned '${_retn}'"; }
    - ls -l /var/log/vmware-svtminion.sh-depend-* | wc -l
    - if [[ 2 -eq $(ls -l /var/log/vmware-svtminion.sh-depend-* | wc -l) ]]; then echo "test correct"; else "test failed, should be 2 depend log files"; exit 1; fi
    - ./svtminion.sh --status --loglevel info || { _retn=$?; if [[ ${_retn} -eq 102 ]]; then echo "test correct"; else echo "test failed, salt-minion should not be installed, returned '${_retn}'"; exit 1; fi; }
    - ls -alh /var/log/vmware-svtminion.sh-status-*
    - ./svtminion.sh --status && { echo "test failed- expecting 102 exit code, salt-minion should not be installed"; exit 1; }
    - ./svtminion.sh --install master=192.168.0.5 --loglevel debug
    - cat /etc/salt/minion
    - cat /etc/salt/minion | grep 'master:\ 192.168.0.5' 1>/dev/null
    - myhost=$(hostname)
    - myfqdn=$(/usr/bin/salt-call --local grains.get fqdn | sed "s/'//g")
    - if [[ "${myhost}" = "${myfqdn}" ]]; then "echo test correct" else echo "test failed, FQDN '${myfqdn}' should have match hostname '${myhost}'"; exit 1; fi
    - ls -alh /opt/saltstack/salt/run/
    - ls -alh /usr/bin/salt-call
    - ls -alh /usr/bin/salt-minion
    - sudo -u root /usr/bin/salt-call --local test.versions
    - sudo -u root /usr/bin/salt-call --local grains.items
    - sudo -u root /usr/bin/salt-call --local cmd.run "ls -al /"
    - ./svtminion.sh --status || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status && { echo "test failed- expecting 100 exit code, salt-minion should be installed"; exit 1; }
    - ./svtminion.sh --clear myminion
    - cat /etc/salt/minion | grep 'id:\ myminion' 1>/dev/null
    - ./svtminion.sh --clear
    - cat /etc/salt/minion | grep '# id:\ myminion' 1>/dev/null
    - cat /etc/salt/minion | grep 'id:\ myminion_' 1>/dev/null
    - ./svtminion.sh --remove || { _retn=$?; echo "test failed, did not uninstall the salt-minion, returned '${_retn}'"; }
    - list_dirs_to_chk_removed="/opt/saltstack /etc/salt /var/run/salt /var/cache/salt /var/log/salt"
    - for idx in ${list_dirs_to_chk_removed}; do if [[ -d "${idx}" ]]; then echo "directory ${idx} is left after a remove"; exit 1; fi; done
    - list_files_to_chk_removed="/usr/bin/salt-call /usr/bin/salt-minion /usr/lib/systemd/system/salt-minion.service /etc/systemd/system/salt-minion.service"
    - for idx in ${list_files_to_chk_removed}; do if [[ -f "${idx}" ]]; then echo "file ${idx} is left after a remove"; exit 1; fi; done
    - ./svtminion.sh --status || { _retn=$?; if [[ ${_retn} -eq 102 ]]; then echo "test correct"; else echo "test failed, salt-minion should not be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status && { echo "test failed- expecting 102 exit code, salt-minion should not be installed"; exit 1; }
    - ./svtminion.sh --version --loglevel debug
    - ls -alh /var/log/vmware-svtminion.sh-default-*
    - ./svtminion.sh --minionversion "3004rc1-1" --install master=192.168.0.6 --loglevel debug
    - cat /etc/salt/minion | grep 'master:\ 192.168.0.6' 1>/dev/null
    - myhost=$(hostname)
    - myfqdn=$(/usr/bin/salt-call --local grains.get fqdn | sed "s/'//g")
    - if [[ "${myhost}" = "${myfqdn}" ]]; then "echo test correct" else echo "test failed, FQDN '${myfqdn}' should have match hostname '${myhost}'"; exit 1; fi
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - ./svtminion.sh --status --loglevel debug || { _retn=$?; if [[ ${_retn} -eq 100 ]]; then echo "test correct"; else echo "test failed, salt-minion should be installed, returned '${_retn}'"; exit 1; fi; }
    - if [[ 10 -eq $(ls -l /var/log/vmware-svtminion.sh-status-* | wc -l) ]]; then echo "test correct"; else "test failed, should be only 10 status log files"; exit 1; fi

  rules:
    - if: "$CI_COMMIT_TAG != null && $CI_PROJECT_PATH == $CICD_UPSTREAM_PATH"
      when: always
    - when: never
